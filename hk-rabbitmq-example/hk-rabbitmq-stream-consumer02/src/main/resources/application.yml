server:
  port: 6611
  servlet:
    context-path: /
spring:
  application:
    name: hk-stream-consumner02
  main:
    banner-mode: 'off'
    allow-bean-definition-overriding: true
  rabbitmq:
    host: 182.61.40.18
    username: test
    password: test
    virtual-host: /test
  cloud:
########################################################################### spring cloud stream 配置
    stream:
      default-binder: rabbit
      bindings:
        publish_input:
          destination: publish_stream
          group: publish02
        routekey_input:
          destination: routekey_stream
          group: routekey02
        topic_input:
          destination: topic_stream
          group: topic02
      rabbit:
        bindings:
          publish_input:
            consumer:
              exchange-type: fanout
          routekey_input:
            consumer:
              # 配置 routeKey
              binding-routing-key: key2
              exchange-type: direct
          topic_input:
            consumer:
#            使用通配符的 routeKey ,# 能多级匹配
              binding-routing-key: "topicKey2.#"
#              指定类型，默认就是 topic
              exchange-type: topic
#
#      bindings:
#        input:
#          # 消息接收的主题，见生产者 （hk-sso-server） 配置文件中的 spring.cloud.stream.bindings.output.destination 参数值
#          destination: destination-01
#          # 组名，如果不指定组名，会生成一个匿名组名，在kafka中，不同组的实例都会消费生产者发送的消息
#          group: group2