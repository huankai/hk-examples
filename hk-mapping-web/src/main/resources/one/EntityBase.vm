package com.sjq.core.entity;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.springframework.data.domain.Persistable;
import org.springframework.format.annotation.DateTimeFormat;

import javax.persistence.*;
import java.io.Serializable;
import java.util.Calendar;
import java.util.Date;

/**
* Created by chenzhen on 2016/3/15.
* 抽象Entity
*/
@MappedSuperclass
public abstract class BaseEntity<PK extends Serializable> implements Persistable<PK> {

    @Column(name = "last_up_time")
    @Temporal(TemporalType.TIMESTAMP)
    private Date lastUpTime;

    @Column(name = "create_time", updatable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date createTime;

    @Transient
    private String searchValue;
    @Transient
    @DateTimeFormat(pattern = "yyyy-MM-dd")
    private Date searchDateStartValue;
    @Transient
    @DateTimeFormat(pattern = "yyyy-MM-dd")
    private Date searchDateEndValue;

    public abstract void setId(final PK id);

    public abstract PK getId();

    @Override
    @Transient
    @JsonIgnore
    public boolean isNew() {
    return (null == getId() || "".equals(getId()));
    }

    public void beforeSave() {
    if ("".equals(getId())) {
    setId(null);
    }
    Date now = Calendar.getInstance().getTime();
    this.lastUpTime = now;
    }

    public void afterSave() {

    }

    public void beforeDelete() {

    }

    public void afterDelete() {

    }

    @Override
    public String toString() {
    return String.format("Entity of type %s with id: %s", this.getClass().getName(), getId());
    }

    @Override
    public boolean equals(Object obj) {

    if (null == obj) {
    return false;
    }

    if (this == obj) {
    return true;
    }

    if (!getClass().equals(obj.getClass())) {
    return false;
    }

    Persistable<?> that = (Persistable<?>) obj;

    return null != this.getId() && this.getId().equals(that.getId());
    }

    @Override
    public int hashCode() {

    int hashCode = 17;

    hashCode += null == getId() ? 0 : getId().hashCode() * 31;

    return hashCode;
    }

    @JsonFormat(pattern = "yyyy-MM-dd", timezone="GMT+8")
    public Date getLastUpTime() {
    return lastUpTime == null ? null : (Date) lastUpTime.clone();
    }

    public void setLastUpTime(Date lastUpTime) {
    this.lastUpTime = lastUpTime == null ? null : (Date) lastUpTime.clone();
    }

    @JsonFormat(pattern = "yyyy-MM-dd", timezone="GMT+8")
    public Date getCreateTime() {
    return createTime == null ? null : (Date) createTime.clone();
    }

    public void setCreateTime(Date createTime) {
    this.createTime = createTime == null ? null : (Date) createTime.clone();
    }

    @JsonIgnore
    public String getSearchValue() {
    return searchValue;
    }

    public void setSearchValue(String searchValue) {
    this.searchValue = searchValue;
    }

    @JsonIgnore
    public Date getSearchDateStartValue() {
    return searchDateStartValue == null ? null : (Date) searchDateStartValue.clone();
    }

    public void setSearchDateStartValue(Date searchDateStartValue) {
    this.searchDateStartValue = searchDateStartValue == null ? null : (Date) searchDateStartValue.clone();
    }

    @JsonIgnore
    public Date getSearchDateEndValue() {
    return searchDateEndValue == null ? null : (Date) searchDateEndValue.clone();
    }

    public void setSearchDateEndValue(Date searchDateEndValue) {
    this.searchDateEndValue = searchDateEndValue == null ? null : (Date) searchDateEndValue.clone();
    }
    }
